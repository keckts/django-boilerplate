// This file is auto-generated by @hey-api/openapi-ts

export type ClientOptions = {
    baseURL: `${string}://${string}` | (string & {});
};

export type Message = {
    message: string;
};

export type PaginatedUserList = {
    count: number;
    next?: string | null;
    previous?: string | null;
    results: Array<User>;
};

export type PatchedUser = {
    readonly id?: number;
    email?: string;
    /**
     * Designates whether this user should be treated as active. Unselect this instead of deleting accounts.
     */
    is_active?: boolean;
    /**
     * Designates whether the user can log into this admin site.
     */
    is_staff?: boolean;
    /**
     * Superuser status
     *
     * Designates that this user has all permissions without explicitly assigning them.
     */
    is_superuser?: boolean;
    readonly created?: string;
    readonly modified?: string;
    last_login?: string | null;
};

export type User = {
    readonly id: number;
    email: string;
    /**
     * Designates whether this user should be treated as active. Unselect this instead of deleting accounts.
     */
    is_active?: boolean;
    /**
     * Designates whether the user can log into this admin site.
     */
    is_staff?: boolean;
    /**
     * Superuser status
     *
     * Designates that this user has all permissions without explicitly assigning them.
     */
    is_superuser?: boolean;
    readonly created: string;
    readonly modified: string;
    last_login?: string | null;
};

export type PatchedUserWritable = {
    email?: string;
    /**
     * Designates whether this user should be treated as active. Unselect this instead of deleting accounts.
     */
    is_active?: boolean;
    /**
     * Designates whether the user can log into this admin site.
     */
    is_staff?: boolean;
    /**
     * Superuser status
     *
     * Designates that this user has all permissions without explicitly assigning them.
     */
    is_superuser?: boolean;
    last_login?: string | null;
};

export type UserWritable = {
    email: string;
    /**
     * Designates whether this user should be treated as active. Unselect this instead of deleting accounts.
     */
    is_active?: boolean;
    /**
     * Designates whether the user can log into this admin site.
     */
    is_staff?: boolean;
    /**
     * Superuser status
     *
     * Designates that this user has all permissions without explicitly assigning them.
     */
    is_superuser?: boolean;
    last_login?: string | null;
};

export type RestRestCheckRetrieveData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/rest/rest-check/';
};

export type RestRestCheckRetrieveResponses = {
    200: Message;
};

export type RestRestCheckRetrieveResponse = RestRestCheckRetrieveResponses[keyof RestRestCheckRetrieveResponses];

export type UsersListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Number of results to return per page.
         */
        limit?: number;
        /**
         * The initial index from which to return the results.
         */
        offset?: number;
    };
    url: '/api/users/';
};

export type UsersListResponses = {
    200: PaginatedUserList;
};

export type UsersListResponse = UsersListResponses[keyof UsersListResponses];

export type UsersCreateData = {
    body: UserWritable;
    path?: never;
    query?: never;
    url: '/api/users/';
};

export type UsersCreateResponses = {
    201: User;
};

export type UsersCreateResponse = UsersCreateResponses[keyof UsersCreateResponses];

export type UsersDestroyData = {
    body?: never;
    path: {
        /**
         * A unique integer value identifying this user.
         */
        id: number;
    };
    query?: never;
    url: '/api/users/{id}/';
};

export type UsersDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type UsersDestroyResponse = UsersDestroyResponses[keyof UsersDestroyResponses];

export type UsersRetrieveData = {
    body?: never;
    path: {
        /**
         * A unique integer value identifying this user.
         */
        id: number;
    };
    query?: never;
    url: '/api/users/{id}/';
};

export type UsersRetrieveResponses = {
    200: User;
};

export type UsersRetrieveResponse = UsersRetrieveResponses[keyof UsersRetrieveResponses];

export type UsersPartialUpdateData = {
    body?: PatchedUserWritable;
    path: {
        /**
         * A unique integer value identifying this user.
         */
        id: number;
    };
    query?: never;
    url: '/api/users/{id}/';
};

export type UsersPartialUpdateResponses = {
    200: User;
};

export type UsersPartialUpdateResponse = UsersPartialUpdateResponses[keyof UsersPartialUpdateResponses];

export type UsersUpdateData = {
    body: UserWritable;
    path: {
        /**
         * A unique integer value identifying this user.
         */
        id: number;
    };
    query?: never;
    url: '/api/users/{id}/';
};

export type UsersUpdateResponses = {
    200: User;
};

export type UsersUpdateResponse = UsersUpdateResponses[keyof UsersUpdateResponses];
